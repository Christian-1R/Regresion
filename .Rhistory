library(readxl)
datosDengue <- read_excel("datosDengue.xlsx",
sheet = "casos vs tiempo")
View(datosDengue)
plot(datosDengue,
col = "blue",
pch = 16,
cex = 1,
xlab = "año",
ylab = "Total de casos")
lines(datos$x, datos$y, col = "blue")
lines(datosDengue$año,datosDengue$`total de casos`, col="blue")
curve(datosDengue$año,datosDengue$`total de casos`, col="blue"
curve(datosDengue$año,datosDengue$`total de casos`, col="blue")
lines(x, valores_predichos, col = "blue")
lines(datosDengue$año, valores_predichos, col="blue")
modelo <- lm(y ~ poly(x, 2))
lines(datosDengue$año, valores_predichos, col="blue")
lines(datosDengue$año, valores_predichos, col="blue")
plot(modelo)
valores_predichos <- predict(modelo)
plot(modelo)
plot(datosDengue,
col = "blue",
pch = 16,
cex = 1,
xlab = "año",
ylab = "Total de casos")
u
View(datosDengue)
lines(datosDengue$año,datosDengue$`total de casos`,col="blue")
lines(datosDengue$año,datosDengue$`total de casos`,col="blue")
plot(datosDengue,
col = "blue",
pch = 16,
cex = 1,
xlab = "año",
ylab = "Total de casos")
plot(datosDengue,
col = "blue",
pch = 12,
cex = 1,
xlab = "año",
ylab = "Total de casos")
plot(datosDengue,
col = "blue",
pch = 14,
cex = 1,
xlab = "año",
ylab = "Total de casos")
plot(datosDengue,
col = "blue",
pch = 15,
cex = 1,
xlab = "año",
ylab = "Total de casos")
plot(datosDengue,
col = "blue",
pch = 17,
cex = 1,
xlab = "año",
ylab = "Total de casos")
plot(datosDengue,
col = "blue",
pch = 18,
cex = 1,
xlab = "año",
ylab = "Total de casos")
plot(datosDengue,
col = "blue",
pch = 16,
cex = 1,
xlab = "año",
ylab = "Total de casos")
lines(datosDengue$año, datosDengue$`total de casos`, col="blue")
library(deSolve)
my_ode = function(t,state,parms){
with(as.list(state),{dndt=rep(0,length(state))
##mis ecuaciones
dndt[1]= -k*N    #dN/dt
dndt[2] = k*N-r*B #dB/dt
##----------
return(list(dndt)) ##return
})
}
## fin de la función
N=70 ## valor inicial de N, es decir, N(0)=70
B=0
#init = c(N=N) ## ceamos un vector con valores iniciales
init = c(N=N,B=B)
#constantes del problema
k=0.2
r=0.1
t=seq(0,30,1) ## se ejecuta por 30 pasos
out= ode(y=init,times=t,func= my_ode,parms=NULL)
head(out)  ##muestra los primeros 6 datos de out
#plot(out,type="l",xlab="Tiempo (h)",ylab="Cafeina (mg)", main="Curva solución ")
plot(out[,1],out[,2],type="l",xlab="tiempo (h)",ylab="Cafeina (mg)")
lines(out[,1],out[,3],col="red")
legend("topright",c("N","B"),col=c("black","red"),lty=1)
library(ggplot2)
library(deSolve)
my_ode = function(t, state, parms){
with(as.list(state),{
dsdt = rep(0,length(state))
##----------ecuaciones------
dsdt[1] = -k*S*I
dsdt[2] = k*S*I-g*I
##--------
return(list(dsdt)) #return
})
}
### CONDICIONES INICIALES
S = 40000  ##S(0) = 40000
I =20     ## I(0)=20
k = 0.1  ## k= \beta =0.1
g=2.14  ## g= \gamma = 2.14
init= c(S=S,I=I)
t=seq(0,53,1) ##se ejecuta para 53 pasos
out = ode(y=init, times=t,func= my_ode, parms=NULL)
head(out) ##muestra los primeros 6 valores guardados en out
plot(out[,1],out[,2], type="l",xlab= "Tiempo (meses)",
ylab= "No. de personas susceptibles") ##gráfica para S(t)
plot(out[,1],out[,3], type="l",xlab= "Tiempo (meses)",
ylab= "No. de infectados") ##gráfica para I(t)
####-----------------------------------------------------------
x <- out[,1]
y <- out[,2]
# Convertir los datos en un data frame
df <- data.frame(x = x, y = y)
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "blue", size = 1) +  # Puntos personalizados
geom_line(color = "blue", linetype = "dashed") +
xlab("Tiempo (días)") +
ylab("No. de personas susceptibles")
######-------------------------------------------------
x <- out[,1]
y <- out[,3]
# Convertir los datos en un data frame
df <- data.frame(x = x, y = y)
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "dashed") +
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
install.packages("ggplot")
library(imputeTS)
conteo2 = na_interpolation(conteo1, option = "spline")
library(imputeTS)
conteo2 = na_interpolation(conteo1, option = "spline")
datosDengue_TABLA = data.frame(datosDengue_TABLA)
## casos de dengue respecto a semanas y año
datosDengue_TABLA = data.frame(datosDengue_TABLA)
library(readxl)
datosDengue_TABLA <- read_excel("datosDengue-TABLA.xlsx")
View(datosDengue_TABLA)
datos_IRA = data.frame(datosDengue_TABLA)
head(datosDengue_TABLA)
dim(datosDengue_TABLA)
# Filtrar datos del año 2022
datos_2022 = datosDengue_TABLA[which(datosDengue_TABLA$año == 2022), ]
# Generar secuencia de semanas
semanas = seq(as.Date("2015-01-04"), as.Date("2022-06-18"), by = "week")
# Crear una matriz para conteo de casos por semana y año
conteo = matrix(0, nrow = 53, ncol = length(2015:2022))
# Rellenar la matriz con los conteos semanales
for (i in 1:8) {
#year= 2014+i
conteo[1:length(table(datosDengue_TABLA$semana[which(datosDengue_TABLA$año == (2014+i))])), i] =
table(datosDengue_TABLA$semana[which(datosDengue_TABLA$año == (2014+i))])
}
# Asignar NA (los datos que no se conocen)
conteo[53, c(1:5, 7)] = NA
conteo1 = ts(c(conteo))
library(imputeTS)
conteo2 = na_interpolation(conteo1, option = "spline")
casos = c(conteo2)
plot(casos, pch = 20)
semanas
which(semanas == "2014-12-28")
library(npregfast)
tabla = data.frame(semanas,casos[1:389])
tabla$conteo = 1:389  ## añade una nueva columna que cuenta los datos
plot(tabla$semanas, tabla$casos, pch = 20)
np_casos = frfast(tabla$casos ~ tabla$conteo,
smooth = "kernel",
kernel = "gaussian",
p = 3, kbin = 389)
## se crea un nuevo data frame con la estimación realizada
np_df = data.frame(np_casos$p)
np_df
plot(tabla$semanas, tabla$casos, pch = 20)
lines(tabla$semanas[1:333], np_df$X1, col = "red", lwd = 2)
dim(tabla$semanas[1:333])
dim(tabla$semanas)
View(tabla)
View(tabla)
sem = c(tabla$semanas[1:333])
dim(sem)
np_df
np_df$X1
length(semanas)
np_df$X1
tabla$semanas
lines(tabla$semanas, np_df$X1, col = "red", lwd = 2)
plot(np_df$X2, type = "l", lwd = 2)
abline(h = 0, col = "blue". lwd = 2)
abline(h = 0, col = "blue", lwd = 2)
abline(v = which(np_df$X2 < 5), col = "red", lwd = 2)
plot(np_df$X2, type = "l", lwd = 2)
abline(h = 0, col = "blue", lwd = 2)
abline(v = which(np_df$X2 < 1), col = "red", lwd = 2)
plot(np_df$X2, type = "l", lwd = 2)
abline(h = 0, col = "blue", lwd = 2)
abline(v = which(np_df$X2 < 0.01), col = "red", lwd = 2)
plot(np_df$X2, type = "l", lwd = 2)
abline(h = 0, col = "blue", lwd = 2)
abline(v = which(np_df$X2 < 0.001), col = "red", lwd = 2)
np_df$X2
plot(np_df$X2, type = "l", lwd = 2)
abline(h = 0, col = "blue", lwd = 2)
abline(v = which(abs(np_df$X2) < 0.001), col = "red", lwd = 2)
plot(np_df$X2, type = "l", lwd = 2)
abline(h = 0, col = "blue", lwd = 2)
abline(v = which(abs(np_df$X2) < 0.01), col = "red", lwd = 2)
plot(np_df$X2, type = "l", lwd = 2)
abline(h = 0, col = "blue", lwd = 2)
abline(v = which(abs(np_df$X2) < 0.05), col = "red", lwd = 2)
plot(np_df$X2, type = "l", lwd = 2)
abline(h = 0, col = "blue", lwd = 2)
abline(v = which(abs(np_df$X2) < 0.03), col = "red", lwd = 2)
which(abs(np_df$X2)
)
which(abs(np_df$X2) < 0.03)
np_df$X2[which(abs(np_df$X2) < 0.03)]
puntos_infle = c(13, 40, 118, 137, 160, 318, 361, 378)
plot(tabla$semanas, tabla$casos, pch = 20)
lines(tabla$semanas, np_df$X1, col = "red", lwd = 2)
abline(v = tabla$semanas[puntos_infle], col = "purple", lwd = 2)
out = ode(y=init, times=t,func= my_ode, parms=NULL,
method = "rk4")
library(deSolve)
out = ode(y=init, times=t,func= my_ode, parms=NULL,
method = "rk4")
library(readxl)
datosDengue_TABLA <- read_excel("datosDengue-TABLA.xlsx")
View(datosDengue_TABLA)
datosDengue_TABLA = data.frame(datosDengue_TABLA)
# Filtrar datos del año 2022
datos_2022 = datosDengue_TABLA[which(datosDengue_TABLA$año == 2022), ]
#datos_2022 = datosDengue_TABLA[datosDengue_TABLA$año == 2022, ]
# Generar secuencia de semanas
semanas = seq(as.Date("2015-01-04"), as.Date("2022-06-18"), by = "week")
# Crear una matriz para conteo de casos por semana y año
conteo = matrix(0, nrow = 53, ncol = length(2015:2022))
# Rellenar la matriz con los conteos semanales
for (i in 1:8) {
#year= 2014+i
conteo[1:length(table(datosDengue_TABLA$semana[which(datosDengue_TABLA$año == (2014+i))])), i] =
table(datosDengue_TABLA$semana[which(datosDengue_TABLA$año == (2014+i))])
}
# Asignar NA (los datos que no se conocen)
conteo[53, c(1:5, 7)] = NA
conteo1 = ts(c(conteo))
#install.packages("imputeTS")
library(imputeTS)
conteo2 = na_interpolation(conteo1, option = "spline")
plot(semanas, conteo2[1:389], lwd = 2, type = "l",xlab = "Semana-Año",
ylab= "N° de casos",
main= "Número de casos de DENGUE, Bucaramanga 2015-2022")
### pasar a gráfico ggplot
x <- semanas
y <- conteo2[1:389]
# Convertir los datos en un data frame
df <- data.frame(x = x, y = y)
library(ggplot2)
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
geom_point(color = "blue", size = 1) +  # Puntos personalizados
#geom_line(color = "blue") +
xlab("Mes-Año") +
ylab("No. de casos")  +
scale_x_date(date_breaks = "6 months", date_labels = "%m-%y")
library(readxl)
datosDengue_TABLA <- read_excel("datosDengue-TABLA.xlsx")
View(datosDengue_TABLA)
datos_IRA = data.frame(datosDengue_TABLA)
head(datosDengue_TABLA)
dim(datosDengue_TABLA)
# Filtrar datos del año 2022
datos_2022 = datosDengue_TABLA[which(datosDengue_TABLA$año == 2022), ]
# Generar secuencia de semanas
semanas = seq(as.Date("2015-01-04"), as.Date("2022-06-18"), by = "week")
length(semanas)
# Crear una matriz para conteo de casos por semana y año
conteo = matrix(0, nrow = 53, ncol = length(2015:2022))
# Rellenar la matriz con los conteos semanales
for (i in 1:8) {
#year= 2014+i
conteo[1:length(table(datosDengue_TABLA$semana[which(datosDengue_TABLA$año == (2014+i))])), i] =
table(datosDengue_TABLA$semana[which(datosDengue_TABLA$año == (2014+i))])
}
# Asignar NA (los datos que no se conocen)
conteo[53, c(1:5, 7)] = NA
conteo1 = ts(c(conteo))
library(imputeTS)
conteo2 = na_interpolation(conteo1, option = "spline")
casos = c(conteo2)
plot(casos, pch = 20)
semanas
which(semanas == "2014-12-28")
library(npregfast)
install.packages("npregfast")
library(npregfast)
tabla = data.frame(semanas,casos[1:389])
tabla$conteo = 1:389  ## añade una nueva columna que cuenta los datos
plot(tabla$semanas, tabla$casos, pch = 20)
np_casos = frfast(tabla$casos ~ tabla$conteo,
smooth = "kernel",
kernel = "gaussian",
p = 3, kbin = 389)
## se crea un nuevo data frame con la estimación realizada
np_df = data.frame(np_casos$p)
np_df
plot(tabla$semanas, tabla$casos, pch = 20)
lines(tabla$semanas, np_df$X1, col = "red", lwd = 2)
plot(np_df$X2, type = "l", lwd = 2)
abline(h = 0, col = "blue", lwd = 2)
abline(v = which(abs(np_df$X2) < 0.03), col = "red", lwd = 2)
np_df$X2[which(abs(np_df$X2) < 0.03)]
puntos_infle = c(13, 40, 118, 137, 160, 318, 361, 378)
plot(tabla$semanas, tabla$casos, pch = 20)
lines(tabla$semanas, np_df$X1, col = "red", lwd = 2)
abline(v = tabla$semanas[puntos_infle], col = "purple", lwd = 2)
plot(tabla$semanas, tabla$casos, pch = 20)
lines(tabla$semanas, np_df$X1, col = "red", lwd = 2)
plot(np_df$X2, type = "l", lwd = 2)
abline(h = 0, col = "blue", lwd = 2)
abline(v = which(abs(np_df$X2) < 0.03), col = "red", lwd = 2)
np_df$X2[which(abs(np_df$X2) < 0.03)]
puntos_infle = c(13, 40, 118, 137, 160, 318, 361, 378)
plot(tabla$semanas, tabla$casos, pch = 20)
lines(tabla$semanas, np_df$X1, col = "red", lwd = 2)
abline(v = tabla$semanas[puntos_infle], col = "purple", lwd = 2)
plot(tabla$semanas, tabla$casos, pch = 20)
lines(tabla$semanas, np_df$X1, col = "red", lwd = 2)
x <- tabla$semanas
y <- tabla$casos.1.389
# Convertir los datos en un data frame
df <- data.frame(x = x, y = y)
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "dashed") +
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "dashed") +
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
library(ggplot2)
# Convertir los datos en un data frame
df <- data.frame(x = x, y = y)
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "dashed") +
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
ggplot(df, aes(x = x, y = y)) +
geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "dashed") +
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
z <- np_df$X1
# Gráfico con ggplot2
ggplot(df, aes(x = x, z = z)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
geom_line(color = "red", linetype = "solid")
df <- data.frame(x = x, z = z)
# Gráfico con ggplot2
ggplot(df, aes(x = x, z = z)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
library(ggplot2)
x <- tabla$semanas
y <- np_df$X1
# Convertir los datos en un data frame
df <- data.frame(x = x, y = y)
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
## segundo conjunto de datos a graficar
z <- tabla$semanas
w <- tabla$casos.1.389.
# Convertir los datos en un data frame
df2 <-  data.frame(z=z,w=w)
+
geom_line(data = df2, aes(x = z, y = w), color = "black", linetype = "dotted")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
geom_line(data = df2, aes(x = z, y = w), color = "black", linetype = "dotted")
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
geom_line(data = df2, aes(x = z, y = w), color = "black", linetype = "dotted")
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
geom_point(data = df2, color = "black", size=1)
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
geom_point(data = df2,aes(x=z,y=w), color = "black", size=1)
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
geom_point(data = df2,aes(x=z,y=w), color = "black", size=1)
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
geom_point(data = df2,aes(x=z,y=w), color = "black", size=1) +
xlab("Tiempo (días)") +
ylab("No. de personas infectadas")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
geom_point(data = df2,aes(x=z,y=w), color = "black", size=1) +
xlab("Mes-Año") +
ylab("No. de casos")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
geom_point(data = df2,aes(x=z,y=w), color = "black", size=1) +
xlab("Mes-Año") +
ylab("No. de casos")+
scale_x_date(date_breaks = "6 months", date_labels = "%m-%y")
# Gráfico con ggplot2
ggplot(df, aes(x = x, y = y)) +
#geom_point(color = "red", size = 1) +  # Puntos personalizados
geom_line(color = "red", linetype = "solid") +
geom_point(data = df2,aes(x=z,y=w), color = "blue", size=1) +
xlab("Mes-Año") +
ylab("No. de casos")+
scale_x_date(date_breaks = "6 months", date_labels = "%m-%y")
